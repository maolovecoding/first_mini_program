<!--pages/posts/posts.wxml-->

<view>
  <!-- 使用官方提供的swiper组件 来做轮播图 -->
  <!-- swiper 滑块视图容器，这个容器不仅仅是用来滑动图片，可以做很多事情 -->
  <!-- 
    indicator-dots="true" 显示轮播图的指示点
    但是，即使我们设置 indicator-dots="false" 也就是设置属性值为false
    我们的轮播图小指示点 也不会消失，除非我们不设置这个属性，或者
    我们设置属性值为 indicator-dots="{{false}}"
    那么问题来了：为什么我们设置属性值为 {{false}} 才能表示否定的概念呢？
    原因是，不加双花括号，我们小程序会把这个属性值当做普通的字符串，普通的字符串在js中我们知道会转为true，这里也是一样。
    双花括号里面写false 才能表示false
    注意：关于双花括号的使用我们在后面会在说，实际上双花括号里面的数据会被当做js中的变量或者表达式进行运算。
   -->
  <!-- autoplay="true" 自动轮播 -->
  <!-- indicator-active-color="#fff" 指示点激活的颜色 -->
  <!-- circular="true"循环播放图片 -->
  <!-- interval="2000" 图片切换间隔时长 字符串的数字内部会被转型 -->
  <swiper indicator-dots="{{true}}" autoplay="true" indicator-active-color="#fff" circular="true" interval="2000">
    <!-- 一般为了让图片撑满容器，需要设置容器的大小，和图片的大小，swipe-item 可以不设置 -->
    <swiper-item>
      <image bind:tap="onGoToDetail" data-post-id="1" src="/images/post/bl.png"></image>
    </swiper-item>
    <swiper-item>
      <image bind:tap="onGoToDetail" data-post-id="5" src="/images/post/cat.png"></image>
    </swiper-item>
    <swiper-item>
      <image bind:tap="onGoToDetail" data-post-id="4" src="/images/post/vr.png"></image>
    </swiper-item>
  </swiper>

  <!-- pages -->

  <!-- 第一篇文章 -->
  <!-- <view class="post-container"> -->
    <!-- 第一部分 作者 日期 -->
    <!-- <view class="post-author-date"> -->
      <!-- 头像 -->
      <!-- <image class="post-author" src="/images/avatar/1.png"></image> -->
      <!-- <text class="post-date">{{dates[0]}}</text> -->
    <!-- </view> -->
    <!-- 第二部分 文章标题 -->
    <!-- <text class="post-title" user-select="true">2021 {{titles[0]}}</text> -->
    <!-- 第三部分 -->
    <!-- <image class="post-image" src="/images/post/cat.png"></image> -->
    <!-- 第四部分 文章内容 -->
    <!-- user-select 方便用户复制 -->
    <!-- <text -->
      <!-- class="post-content">滑块视图容器，这个容器不仅仅是用来滑动图片，可以做很多事情,滑块视图容器，这个容器不仅仅是用来滑动图片，可以做很多事情,滑块视图容器，这个容器不仅仅是用来滑动图片，可以做很多事情,滑块视图容器，这个容器不仅仅是用来滑动图片，可以做很多事情</text> -->
    <!-- 第五部分 -->
    <!-- <view class="post-like"> -->
      <!-- <l-icon color="#666" size="28" name="favor" class="post-like-image" /> -->
      <!-- <image class="post-like-image" src="/images/icon/chat.png"></image> -->
      <!-- <text class="post-like-font">92</text> -->
      <!-- <image class="post-like-image" src="/images/icon/view.png" /> -->
      <!-- <l-icon color="#666" size="32" name="eye" class="post-like-image" /> -->
      <!-- <text class="post-like-font">102</text> -->
    <!-- </view> -->
  <!-- </view> -->

  <!-- 使用列表渲染来完成文章的制作 -->
  <!-- 列表渲染的语法： wx:for -->
  <!-- block  一般我们进行列表渲染的时候，都会在block标签上-->
  <!-- block 并不是一个组件，它仅仅是一个包装元素，不会在页面中做任何渲染，只接受控制属性。 -->
  <!-- block 标签没什么特别的含义，就是相当于一个括号，将多个需要循环的标签包裹起来 -->
  <!-- 循环取posts数组里面的每一项元素遍历 -->
  <!-- 如果没有指定每一项循环元素的名称，那么默认就是 item -->
  <!-- 如果需要修改循环元素的名称，那么我们可以通过 wx:for-item 属性指定，还可以指定数组当前下标的变量名：wx:for-index="index"  -->
  <!-- 默认数组的当前项的下标变量名默认为 index -->
  <block wx:for="{{posts}}" wx:key="postId">
    <!-- 监听用户的点击事件，跳转到文章详情页 -->
    <!-- 跳转页面的同时，绑定当前文章号 postId -->
    <!-- 使用data- 的方式绑定文章号  -->
    <view data-post-id="{{item.postId}}" class="post-container" bind:tap="onGoToDetail">
      <!-- 第一部分 作者 日期 -->
      <view class="post-author-date">
        <!-- 头像 -->
        <image class="post-author" src="{{item.avatar}}"></image>
        <text class="post-date">{{item.date}}</text>
      </view>
      <!-- 第二部分 文章标题 -->
      <text class="post-title" user-select="true">{{item.title}}</text>
      <!-- 第三部分 -->
      <image class="post-image" src="{{item.imgSrc}}"></image>
      <!-- 第四部分 文章内容 -->
      <!-- user-select 方便用户复制 -->
      <text class="post-content">{{item.content}}</text>
      <!-- 第五部分 -->
      <view class="post-like">
        <l-icon color="#666" size="28" name="favor" class="post-like-image" />
        <text class="post-like-font">{{item.collection}}</text>
        <l-icon color="#666" size="32" name="eye" class="post-like-image" />
        <text class="post-like-font">{{item.reading}}</text>
      </view>
    </view>
  </block>


</view>